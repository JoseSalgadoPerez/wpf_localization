<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:wpf_localization">

    <Style x:Key="CultureList" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="0,5,5,0" />
    </Style>

    <Style x:Key="WindowContentGrid" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style x:Key="Label" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="DarkSlateBlue" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Label.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputText" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="Foreground" Value="#0066CC" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Margin" Value="0,5,5,0" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="AutomationProperties.HelpText" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="false">
                <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip.Content}" />
                <Setter Property="AutomationProperties.HelpText" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip.Content}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TotalRectangle" TargetType="{x:Type Rectangle}">
        <Setter Property="Margin" Value="5,5,5,0" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="RadiusX" Value="10" />
        <Setter Property="RadiusY" Value="10" />
        <Setter Property="Stroke">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#4E87D4" Offset="0" />
                            <GradientStop Color="#73B2F5" Offset="1" />
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#73B2F5" Offset="0" />
                            <GradientStop Color="#4E87D4" Offset="1" />
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Stroke" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SeparatorRectangle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource TotalRectangle}">
        <Setter Property="Height" Value="3" />
        <Setter Property="RadiusX" Value="2" />
        <Setter Property="RadiusY" Value="2" />
    </Style>

    <Style x:Key="TopSeparatorRectangle" TargetType="{x:Type Rectangle}"
               BasedOn="{StaticResource SeparatorRectangle}">
        <Setter Property="Margin" Value="5,10,5,5" />
    </Style>


    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Viewbox>
                        <Border x:Name="Border" CornerRadius="10"
                            Background="#FFFFFFFF"
                            Width="40" Height="20">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                            </Border.Effect>
                            <Ellipse x:Name="Ellipse" Fill="#FFFFFFFF" Stretch="Uniform"
                                 Margin="2 1 2 1"
                                 Stroke="Gray" StrokeThickness="0.2"
                                 HorizontalAlignment="Stretch">
                                <Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                </Ellipse.Effect>
                            </Ellipse>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#FF4CD661"
                                                    Duration="0:0:0.1" />
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="20 1 2 1"
                                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="White"
                                                    Duration="0:0:0.1" />
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="2 1 2 1"
                                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>